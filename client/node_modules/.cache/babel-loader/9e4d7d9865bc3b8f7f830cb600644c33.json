{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phila\\\\Desktop\\\\final\\\\backend\\\\front-end\\\\src\\\\ProductContext.js\";\nimport React, { Component } from \"react\"; // import uuid from \"react-uuid\";\n\nimport axios from \"axios\";\nexport const ProductContext = React.createContext();\nexport class ProductProvider extends Component {\n  constructor() {\n    super();\n\n    this.addCart = id => {\n      const {\n        products,\n        cart\n      } = this.state;\n      const check = cart.every(item => {\n        return item._id !== id;\n      });\n\n      if (check) {\n        const data = products.filter(product => {\n          return product._id === id;\n        });\n        this.setState({\n          cart: [...cart, ...data]\n        });\n      } else {\n        alert(\"item already selected\");\n      }\n    };\n\n    this.add = id => {\n      const {\n        cart\n      } = this.state;\n      cart.forEach(item => {\n        if (item._id === id) {\n          item.count += 1;\n        }\n      });\n      this.setState({\n        cart: cart\n      });\n      this.addTotal();\n    };\n\n    this.minus = id => {\n      const {\n        cart\n      } = this.state;\n      cart.forEach(item => {\n        if (item._id === id) {\n          item.count === 1 ? item.count = 1 : item.count -= 1;\n        }\n      });\n      this.setState({\n        cart: cart\n      });\n      this.addTotal();\n    };\n\n    this.removeItem = id => {\n      const {\n        cart\n      } = this.state;\n      cart.forEach((item, index) => {\n        if (item._id === id) {\n          cart.splice(index, 1);\n        }\n      });\n      this.setState({\n        cart: cart\n      });\n      this.addTotal();\n    };\n\n    this.addTotal = () => {\n      const {\n        cart\n      } = this.state;\n      const results = cart.reduce((prev, product) => {\n        return prev + product.price * product.count;\n      }, 0);\n      this.setState({\n        total: results\n      });\n    };\n\n    this.state = {\n      products: [],\n      cart: [],\n      total: 0,\n      register: false\n    };\n  }\n\n  //for the local storage\n  componentDidUpdate() {\n    localStorage.setItem(\"cart_data\", JSON.stringify(this.state.cart));\n    localStorage.setItem(\"total_data\", JSON.stringify(this.state.total));\n  }\n\n  componentDidMount() {\n    const cart_data = JSON.parse(localStorage.getItem(\"cart_data\"));\n\n    if (cart_data !== null) {\n      this.setState({\n        cart: cart_data\n      });\n    }\n\n    const total_data = JSON.parse(localStorage.getItem(\"total_data\"));\n\n    if (total_data !== null) {\n      this.setState({\n        total: total_data\n      });\n    } //getting the products from the database\n\n\n    const me = async () => {\n      fetch(\"/products\").then(res => res.json()).then(allProducts => this.setState({\n        products: allProducts\n      }, console.log(`products fetched`, allProducts)) // console.log(allProducts)\n      );\n    };\n\n    me();\n  }\n\n  render() {\n    const {\n      products,\n      cart,\n      total\n    } = this.state;\n    const {\n      addCart,\n      minus,\n      add,\n      removeItem,\n      addTotal\n    } = this;\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: {\n        products,\n        cart,\n        total,\n        addCart,\n        removeItem,\n        minus,\n        add,\n        addTotal\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/phila/Desktop/final/backend/front-end/src/ProductContext.js"],"names":["React","Component","axios","ProductContext","createContext","ProductProvider","constructor","addCart","id","products","cart","state","check","every","item","_id","data","filter","product","setState","alert","add","forEach","count","addTotal","minus","removeItem","index","splice","results","reduce","prev","price","total","register","componentDidUpdate","localStorage","setItem","JSON","stringify","componentDidMount","cart_data","parse","getItem","total_data","me","fetch","then","res","json","allProducts","console","log","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,cAAc,GAAGH,KAAK,CAACI,aAAN,EAAvB;AAEP,OAAO,MAAMC,eAAN,SAA8BJ,SAA9B,CAAwC;AAC7CK,EAAAA,WAAW,GAAG;AACZ;;AADY,SAUdC,OAVc,GAUHC,EAAD,IAAQ;AAChB,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAqB,KAAKC,KAAhC;AACA,YAAMC,KAAK,GAAGF,IAAI,CAACG,KAAL,CAAYC,IAAD,IAAU;AACjC,eAAOA,IAAI,CAACC,GAAL,KAAaP,EAApB;AACD,OAFa,CAAd;;AAGA,UAAII,KAAJ,EAAW;AACT,cAAMI,IAAI,GAAGP,QAAQ,CAACQ,MAAT,CAAiBC,OAAD,IAAa;AACxC,iBAAOA,OAAO,CAACH,GAAR,KAAgBP,EAAvB;AACD,SAFY,CAAb;AAGA,aAAKW,QAAL,CAAc;AAAET,UAAAA,IAAI,EAAE,CAAC,GAAGA,IAAJ,EAAU,GAAGM,IAAb;AAAR,SAAd;AACD,OALD,MAKO;AACLI,QAAAA,KAAK,CAAC,uBAAD,CAAL;AACD;AACF,KAvBa;;AAAA,SAyBdC,GAzBc,GAyBPb,EAAD,IAAQ;AACZ,YAAM;AAAEE,QAAAA;AAAF,UAAW,KAAKC,KAAtB;AACAD,MAAAA,IAAI,CAACY,OAAL,CAAcR,IAAD,IAAU;AACrB,YAAIA,IAAI,CAACC,GAAL,KAAaP,EAAjB,EAAqB;AACnBM,UAAAA,IAAI,CAACS,KAAL,IAAc,CAAd;AACD;AACF,OAJD;AAKA,WAAKJ,QAAL,CAAc;AAAET,QAAAA,IAAI,EAAEA;AAAR,OAAd;AACA,WAAKc,QAAL;AACD,KAlCa;;AAAA,SAoCdC,KApCc,GAoCLjB,EAAD,IAAQ;AACd,YAAM;AAAEE,QAAAA;AAAF,UAAW,KAAKC,KAAtB;AACAD,MAAAA,IAAI,CAACY,OAAL,CAAcR,IAAD,IAAU;AACrB,YAAIA,IAAI,CAACC,GAAL,KAAaP,EAAjB,EAAqB;AACnBM,UAAAA,IAAI,CAACS,KAAL,KAAe,CAAf,GAAoBT,IAAI,CAACS,KAAL,GAAa,CAAjC,GAAuCT,IAAI,CAACS,KAAL,IAAc,CAArD;AACD;AACF,OAJD;AAKA,WAAKJ,QAAL,CAAc;AAAET,QAAAA,IAAI,EAAEA;AAAR,OAAd;AACA,WAAKc,QAAL;AACD,KA7Ca;;AAAA,SA+CdE,UA/Cc,GA+CAlB,EAAD,IAAQ;AACnB,YAAM;AAAEE,QAAAA;AAAF,UAAW,KAAKC,KAAtB;AACAD,MAAAA,IAAI,CAACY,OAAL,CAAa,CAACR,IAAD,EAAOa,KAAP,KAAiB;AAC5B,YAAIb,IAAI,CAACC,GAAL,KAAaP,EAAjB,EAAqB;AACnBE,UAAAA,IAAI,CAACkB,MAAL,CAAYD,KAAZ,EAAmB,CAAnB;AACD;AACF,OAJD;AAKA,WAAKR,QAAL,CAAc;AAAET,QAAAA,IAAI,EAAEA;AAAR,OAAd;AACA,WAAKc,QAAL;AACD,KAxDa;;AAAA,SA0DdA,QA1Dc,GA0DH,MAAM;AACf,YAAM;AAAEd,QAAAA;AAAF,UAAW,KAAKC,KAAtB;AACA,YAAMkB,OAAO,GAAGnB,IAAI,CAACoB,MAAL,CAAY,CAACC,IAAD,EAAOb,OAAP,KAAmB;AAC7C,eAAOa,IAAI,GAAGb,OAAO,CAACc,KAAR,GAAgBd,OAAO,CAACK,KAAtC;AACD,OAFe,EAEb,CAFa,CAAhB;AAGA,WAAKJ,QAAL,CAAc;AAAEc,QAAAA,KAAK,EAAEJ;AAAT,OAAd;AACD,KAhEa;;AAEZ,SAAKlB,KAAL,GAAa;AACXF,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,IAAI,EAAE,EAFK;AAGXuB,MAAAA,KAAK,EAAE,CAHI;AAIXC,MAAAA,QAAQ,EAAE;AAJC,KAAb;AAMD;;AA0DD;AACAC,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAe,KAAK5B,KAAL,CAAWD,IAA1B,CAAlC;AACA0B,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAe,KAAK5B,KAAL,CAAWsB,KAA1B,CAAnC;AACD;;AAEDO,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,SAAS,GAAGH,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACO,OAAb,CAAqB,WAArB,CAAX,CAAlB;;AACA,QAAIF,SAAS,KAAK,IAAlB,EAAwB;AACtB,WAAKtB,QAAL,CAAc;AAAET,QAAAA,IAAI,EAAE+B;AAAR,OAAd;AACD;;AACD,UAAMG,UAAU,GAAGN,IAAI,CAACI,KAAL,CAAWN,YAAY,CAACO,OAAb,CAAqB,YAArB,CAAX,CAAnB;;AACA,QAAIC,UAAU,KAAK,IAAnB,EAAyB;AACvB,WAAKzB,QAAL,CAAc;AAAEc,QAAAA,KAAK,EAAEW;AAAT,OAAd;AACD,KARiB,CAUlB;;;AACA,UAAMC,EAAE,GAAG,YAAY;AACrBC,MAAAA,KAAK,CAAC,WAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAGKG,WAAD,IACE,KAAK/B,QAAL,CACE;AAAEV,QAAAA,QAAQ,EAAEyC;AAAZ,OADF,EAEEC,OAAO,CAACC,GAAR,CAAa,kBAAb,EAAgCF,WAAhC,CAFF,CAJN,CAQI;AARJ;AAUD,KAXD;;AAYAL,IAAAA,EAAE;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAE5C,MAAAA,QAAF;AAAYC,MAAAA,IAAZ;AAAkBuB,MAAAA;AAAlB,QAA4B,KAAKtB,KAAvC;AACA,UAAM;AAAEJ,MAAAA,OAAF;AAAWkB,MAAAA,KAAX;AAAkBJ,MAAAA,GAAlB;AAAuBK,MAAAA,UAAvB;AAAmCF,MAAAA;AAAnC,QAAgD,IAAtD;AACA,wBACE,oBAAC,cAAD,CAAgB,QAAhB;AACE,MAAA,KAAK,EAAE;AACLf,QAAAA,QADK;AAELC,QAAAA,IAFK;AAGLuB,QAAAA,KAHK;AAIL1B,QAAAA,OAJK;AAKLmB,QAAAA,UALK;AAMLD,QAAAA,KANK;AAOLJ,QAAAA,GAPK;AAQLG,QAAAA;AARK,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYG,KAAK8B,KAAL,CAAWC,QAZd,CADF;AAgBD;;AAtH4C","sourcesContent":["import React, { Component } from \"react\";\r\n// import uuid from \"react-uuid\";\r\nimport axios from \"axios\";\r\n\r\nexport const ProductContext = React.createContext();\r\n\r\nexport class ProductProvider extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      products: [],\r\n      cart: [],\r\n      total: 0,\r\n      register: false,\r\n    };\r\n  }\r\n\r\n  addCart = (id) => {\r\n    const { products, cart } = this.state;\r\n    const check = cart.every((item) => {\r\n      return item._id !== id;\r\n    });\r\n    if (check) {\r\n      const data = products.filter((product) => {\r\n        return product._id === id;\r\n      });\r\n      this.setState({ cart: [...cart, ...data] });\r\n    } else {\r\n      alert(\"item already selected\");\r\n    }\r\n  };\r\n\r\n  add = (id) => {\r\n    const { cart } = this.state;\r\n    cart.forEach((item) => {\r\n      if (item._id === id) {\r\n        item.count += 1;\r\n      }\r\n    });\r\n    this.setState({ cart: cart });\r\n    this.addTotal();\r\n  };\r\n\r\n  minus = (id) => {\r\n    const { cart } = this.state;\r\n    cart.forEach((item) => {\r\n      if (item._id === id) {\r\n        item.count === 1 ? (item.count = 1) : (item.count -= 1);\r\n      }\r\n    });\r\n    this.setState({ cart: cart });\r\n    this.addTotal();\r\n  };\r\n\r\n  removeItem = (id) => {\r\n    const { cart } = this.state;\r\n    cart.forEach((item, index) => {\r\n      if (item._id === id) {\r\n        cart.splice(index, 1);\r\n      }\r\n    });\r\n    this.setState({ cart: cart });\r\n    this.addTotal();\r\n  };\r\n\r\n  addTotal = () => {\r\n    const { cart } = this.state;\r\n    const results = cart.reduce((prev, product) => {\r\n      return prev + product.price * product.count;\r\n    }, 0);\r\n    this.setState({ total: results });\r\n  };\r\n\r\n  //for the local storage\r\n  componentDidUpdate() {\r\n    localStorage.setItem(\"cart_data\", JSON.stringify(this.state.cart));\r\n    localStorage.setItem(\"total_data\", JSON.stringify(this.state.total));\r\n  }\r\n\r\n  componentDidMount() {\r\n    const cart_data = JSON.parse(localStorage.getItem(\"cart_data\"));\r\n    if (cart_data !== null) {\r\n      this.setState({ cart: cart_data });\r\n    }\r\n    const total_data = JSON.parse(localStorage.getItem(\"total_data\"));\r\n    if (total_data !== null) {\r\n      this.setState({ total: total_data });\r\n    }\r\n\r\n    //getting the products from the database\r\n    const me = async () => {\r\n      fetch(\"/products\")\r\n        .then((res) => res.json())\r\n        .then(\r\n          (allProducts) =>\r\n            this.setState(\r\n              { products: allProducts },\r\n              console.log(`products fetched`, allProducts)\r\n            )\r\n          // console.log(allProducts)\r\n        );\r\n    };\r\n    me();\r\n  }\r\n\r\n  render() {\r\n    const { products, cart, total } = this.state;\r\n    const { addCart, minus, add, removeItem, addTotal } = this;\r\n    return (\r\n      <ProductContext.Provider\r\n        value={{\r\n          products,\r\n          cart,\r\n          total,\r\n          addCart,\r\n          removeItem,\r\n          minus,\r\n          add,\r\n          addTotal,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </ProductContext.Provider>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}